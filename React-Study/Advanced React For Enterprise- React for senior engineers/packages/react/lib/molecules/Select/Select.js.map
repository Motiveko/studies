{"version":3,"file":"Select.js","sources":["../../../src/molecules/Select/Select.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\n\ninterface SelectOption {\n  label: string;\n  value: string;\n}\ninterface SelectProps {\n  onOptionSelected?: (option: SelectOption, optionIndex: number) => void;\n  options?: SelectOption[];\n  label?: string;\n}\n\nconst Select: React.FC<SelectProps> = ({\n  options = [],\n  label = \"Please select an option ...\",\n  onOptionSelected: handler,\n}) => {\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const labelRef = useRef<HTMLButtonElement>(null);\n  const [overlayTop, setOverlayTop] = useState<number | undefined>(undefined);\n\n  useEffect(() => {\n    setOverlayTop((labelRef.current?.offsetHeight || 0) + 10);\n  }, [labelRef.current?.offsetHeight]);\n\n  const onOptionSelected = (option: SelectOption, optionIndex: number) => {\n    setIsOpen(!isOpen);\n    if (handler) {\n      handler(option, optionIndex);\n    }\n  };\n  const onLabelClick = () => {\n    setIsOpen(!isOpen);\n  };\n  return (\n    <div className=\"dse-select\">\n      <button\n        className=\"dse-select__label\"\n        onClick={() => onLabelClick()}\n        ref={labelRef}\n      >\n        <span>{label}</span>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"h-6 w-6\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n          width=\"1rem\"\n          height=\"1rem\"\n          strokeWidth={2}\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            d=\"M19 9l-7 7-7-7\"\n          />\n        </svg>\n      </button>\n      {isOpen && (\n        <ul style={{ top: overlayTop }} className=\"dse-select__overlay\">\n          {options.map((option, optionIndex) => (\n            <li\n              onClick={() => onOptionSelected(option, optionIndex)}\n              key={option.value}\n            >\n              {option.label}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Select;\n"],"names":[],"mappings":";;AAYA,MAAM,MAAM,GAA0B,CAAC,EACrC,OAAO,GAAG,EAAE,EACZ,KAAK,GAAG,6BAA6B,EACrC,gBAAgB,EAAE,OAAO,GAC1B,KAAI;IACH,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,GAAG,QAAQ,CAAU,KAAK,CAAC,CAAC;AACrD,IAAA,MAAM,QAAQ,GAAG,MAAM,CAAoB,IAAI,CAAC,CAAC;IACjD,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,GAAG,QAAQ,CAAqB,SAAS,CAAC,CAAC;IAE5E,SAAS,CAAC,MAAK;AACb,QAAA,aAAa,CAAC,CAAC,QAAQ,CAAC,OAAO,EAAE,YAAY,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;KAC3D,EAAE,CAAC,QAAQ,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC,CAAC;AAErC,IAAA,MAAM,gBAAgB,GAAG,CAAC,MAAoB,EAAE,WAAmB,KAAI;AACrE,QAAA,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC;AACnB,QAAA,IAAI,OAAO,EAAE;AACX,YAAA,OAAO,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;AAC9B,SAAA;AACH,KAAC,CAAC;IACF,MAAM,YAAY,GAAG,MAAK;AACxB,QAAA,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC;AACrB,KAAC,CAAC;AACF,IAAA,QACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAK,SAAS,EAAC,YAAY,EAAA;AACzB,QAAA,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA,EACE,SAAS,EAAC,mBAAmB,EAC7B,OAAO,EAAE,MAAM,YAAY,EAAE,EAC7B,GAAG,EAAE,QAAQ,EAAA;AAEb,YAAA,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,IAAA,EAAO,KAAK,CAAQ;AACpB,YAAA,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EACE,KAAK,EAAC,4BAA4B,EAClC,SAAS,EAAC,SAAS,EACnB,IAAI,EAAC,MAAM,EACX,OAAO,EAAC,WAAW,EACnB,MAAM,EAAC,cAAc,EACrB,KAAK,EAAC,MAAM,EACZ,MAAM,EAAC,MAAM,EACb,WAAW,EAAE,CAAC,EAAA;AAEd,gBAAA,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,EACE,aAAa,EAAC,OAAO,EACrB,cAAc,EAAC,OAAO,EACtB,CAAC,EAAC,gBAAgB,EAAA,CAClB,CACE,CACC;QACR,MAAM,KACL,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,EAAI,KAAK,EAAE,EAAE,GAAG,EAAE,UAAU,EAAE,EAAE,SAAS,EAAC,qBAAqB,EAC5D,EAAA,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,WAAW,MAC/B,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,EACE,OAAO,EAAE,MAAM,gBAAgB,CAAC,MAAM,EAAE,WAAW,CAAC,EACpD,GAAG,EAAE,MAAM,CAAC,KAAK,EAAA,EAEhB,MAAM,CAAC,KAAK,CACV,CACN,CAAC,CACC,CACN,CACG,EACN;AACJ;;;;"}