{"version":3,"file":"Select.js","sources":["../../../src/molecules/Select/Select.tsx"],"sourcesContent":["import React, {\n  createRef,\n  KeyboardEventHandler,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport Text from \"../../atoms/Text\";\ninterface SelectOption {\n  label: string;\n  value: string;\n}\n\ninterface RenderOptionProps {\n  isSelected: boolean;\n  option: SelectOption;\n  getOptionRecommendedProps: (overrideProps?: Object) => Object;\n}\n\ninterface SelectProps {\n  onOptionSelected?: (option: SelectOption, optionIndex: number) => void;\n  options?: SelectOption[];\n  label?: string;\n  renderOption?: (props: RenderOptionProps) => React.ReactNode;\n}\n\nconst Select: React.FC<SelectProps> = ({\n  options = [],\n  label = \"Please select an option ...\",\n  onOptionSelected: handler,\n  renderOption,\n}) => {\n  const labelRef = useRef<HTMLButtonElement>(null);\n  const [overlayTop, setOverlayTop] = useState<number | undefined>(undefined);\n  useEffect(() => {\n    setOverlayTop((labelRef.current?.offsetHeight || 0) + 10);\n  }, [labelRef.current?.offsetHeight]);\n\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const [selectedIndex, setSelectedIndex] = useState<number | undefined>(\n    undefined\n  );\n  const onOptionSelected = (option: SelectOption, optionIndex: number) => {\n    setIsOpen(false);\n    setSelectedIndex(optionIndex);\n    if (handler) {\n      handler(option, optionIndex);\n    }\n  };\n  const onLabelClick = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const selectedOption = useMemo(\n    () => (selectedIndex === undefined ? label : options[selectedIndex].label),\n    [options, selectedIndex]\n  );\n\n  // 키보드에는 hover가 없으므로 hover와 키보드로 foucus 선택을 합치기 위한 state\n  const [highlightedIndex, setHighlightedIndex] = useState<number | null>(null);\n  const highlightItem = (optionIndex: number | null) => {\n    setHighlightedIndex(optionIndex);\n  };\n\n  // 이렇게 구현한 이유는 option이 open되고 요소가 랜더링이 된 상태일때에 focus를 해야 하기 때문이다. useEffect는 상태값 변경에 따른 랜더링 후 동작하기 때문\n  useEffect(() => {\n    if (highlightedIndex !== null && isOpen) {\n      const ref = optionRefs[highlightedIndex];\n      ref.current?.focus(); // focus: 스크린 리더의 focus 영역이 이동한다.\n    }\n  }, [highlightedIndex, isOpen]);\n\n  const getNextOptionIndex = () =>\n    ((highlightedIndex || 0) + 1) % options.length;\n\n  const getPreviousOptionIndex = () => (highlightedIndex || options.length) - 1;\n  const optionKeyDown: KeyboardEventHandler = (event) => {\n    const { key } = event;\n    if (key === \"Escape\") {\n      setIsOpen(false);\n      return;\n    }\n\n    if (key === \"ArrowDown\") {\n      highlightItem(getNextOptionIndex());\n      return;\n    }\n\n    if (key === \"ArrowUp\") {\n      highlightItem(getPreviousOptionIndex());\n      return;\n    }\n\n    if (key === \"Enter\" && highlightedIndex !== null) {\n      onOptionSelected(options[highlightedIndex], highlightedIndex);\n    }\n  };\n\n  const onButtonKeyDown: KeyboardEventHandler = (event) => {\n    event.preventDefault();\n\n    if (KEYS.includes(event.key)) {\n      setIsOpen((prev) => !prev);\n    }\n\n    highlightItem(highlightedIndex || 0);\n  };\n\n  // 각 option 요소(li)에 대한 참조, 여러개이고 동적이기 때문에 useRef로는 좀 힘들다.\n  const [optionRefs, setOptionRefs] = useState<\n    React.RefObject<HTMLLIElement>[]\n  >([]);\n  useEffect(() => {\n    setOptionRefs(options.map((_) => createRef<HTMLLIElement>()));\n  }, [options.length]);\n\n  return (\n    <div className=\"dse-select\">\n      <button\n        onKeyDown={onButtonKeyDown}\n        className=\"dse-select__label\"\n        aria-controls=\"dse-select-list\"\n        aria-haspopup={true}\n        aria-expanded={isOpen ? true : undefined}\n        onClick={() => onLabelClick()}\n        ref={labelRef}\n      >\n        <Text>{selectedOption}</Text>\n        {caretIcon(isOpen)}\n      </button>\n      {isOpen && (\n        <ul\n          id=\"dse-select-list\"\n          role=\"menu\"\n          style={{ top: overlayTop }}\n          className=\"dse-select__overlay\"\n        >\n          {options.map((option, optionIndex) => {\n            const isSelected = selectedIndex === optionIndex;\n            const isHighlighted = highlightedIndex === optionIndex;\n\n            const ref = optionRefs[optionIndex];\n\n            const renderOptionProps: RenderOptionProps = {\n              isSelected,\n              option,\n              getOptionRecommendedProps: (overrideProps = {}) => {\n                return {\n                  ref,\n                  role: \"menuitemradio\",\n                  \"aria-label\": option.label,\n                  \"aria-checked\": isSelected ? true : undefined,\n                  onKeyDown: optionKeyDown,\n                  tabIndex: isHighlighted ? -1 : 0, // tabIndex가 있어야 focus를 받을 수 있다.(기본으로 받을수 있는 요소도 있음)\n                  onMouseEnter: () => highlightItem(optionIndex), // :hover를 js로 구현한다.\n                  onMouseLeave: () => highlightItem(null),\n                  className: `dse-select__option \n                  ${isSelected ? \"dse-select__option--selected\" : \"\"} \n                  ${isHighlighted ? \"dse-select__option--highlighted\" : \"\"}`,\n                  onClick: () => onOptionSelected(option, optionIndex),\n                  key: option.value,\n                  ...overrideProps,\n                };\n              },\n            };\n            if (renderOption) {\n              return renderOption(renderOptionProps);\n            }\n            return (\n              <li {...renderOptionProps.getOptionRecommendedProps()}>\n                <Text>{option.label}</Text>\n                {isSelected && checkIcon}\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n};\nconst caretIcon = (isOpen: boolean) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={`h-6 w-6 dse-select__caret ${\n        isOpen ? \"dse-select__caret--open\" : \"dse-select__caret--closed\"\n      }`}\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n      width=\"1rem\"\n      height=\"1rem\"\n      strokeWidth={2}\n    >\n      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M19 9l-7 7-7-7\" />\n    </svg>\n  );\n};\nconst checkIcon = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className=\"h-6 w-6\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke=\"currentColor\"\n    width=\"1rem\"\n    height=\"1rem\"\n    strokeWidth={2}\n  >\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M5 13l4 4L19 7\" />\n  </svg>\n);\n\nconst KEYS = [\"Enter\", \"ArrowDown\", \" \"];\n\nexport default Select;\n"],"names":[],"mappings":"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"}