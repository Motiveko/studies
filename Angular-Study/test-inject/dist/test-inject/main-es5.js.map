{"version":3,"sources":["webpack:///src/app/config/config.ts","webpack:///src/app/data1/data1.component.ts","webpack:///src/app/data1/data1.component.html","webpack:///src/app/in-mem-hero.service.ts","webpack:///src/environments/environment.ts","webpack:///src/app/data.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/data2/data2.component.ts","webpack:///src/app/data2/data2.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/AppConfig.ts","webpack:///src/app/child/child/child.component.ts","webpack:///src/app/child/child/child.component.html","webpack:///src/app/child/child.module.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/api.service.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/child/child-routing.module.ts"],"names":["config","endPoint","Data1Component","dataService","message","newMessage","selector","templateUrl","styleUrls","InMemHeroService","onePerson","id","uuid","phone","phoneNumber","phoneNumberFormat","firstName","lastName","email","zipCode","city","streetName","streetAddress","res","number","pipe","subscribe","person","push","err","console","log","reqInfo","heros","name","persons","providedIn","environment","production","DataService","AppComponent","appConfig","apiService","router","route","title","Data2Component","$event","checkInput","inMemoryOptions","host","delay","AppModule","forRoot","declarations","imports","bootstrap","AppConfig","url","port","others","MY_APP_CONFIG","APP_CONFIG","factory","AppConfigProvider","provide","useValue","ChildComponent","ChildModule","routes","path","children","loadChildren","then","m","LazyLoadingModule","CustomersModule","AppRoutingModule","exports","ApiService","http","get","handleResponse","body","bootstrapModule","error","webpackEmptyAsyncContext","req","Promise","resolve","e","Error","code","keys","module","component","ChildRoutingModule","forChild"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { environment } from \"src/environments/environment\";\n\nexport const config = {\n    endPoint : environment.endPoint\n}","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-data1',\n  templateUrl: './data1.component.html',\n  styleUrls: ['./data1.component.css']\n})\nexport class Data1Component implements OnInit {\n\n  constructor(\n    private dataService: DataService\n  ) { }\n\n  ngOnInit(): void {}\n\n  get message(): string {\n    return this.dataService.message\n  }\n\n  set message(newMessage: string) {\n    this.dataService.message = newMessage\n  }\n  \n}\n","<div style=\"background-color: aliceblue; padding: 10px;\">\n    <h2>Data - 1</h2>\n    <p>{{ message }}</p>\n    <input type=\"text\" (input)=\"message = $event.target.value\" placeholder=\"message\">\n</div>","import { Injectable } from '@angular/core';\nimport { InMemoryDbService, RequestInfo } from 'angular-in-memory-web-api';\nimport {  Observable, range } from 'rxjs';\nimport * as faker from 'faker/locale/ko'\nimport { map, reduce } from 'rxjs/operators';\n\n/**\n * Http Client의 Api호출을 Mocking하기위한 InMemoryDbService 구현체\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class InMemHeroService implements InMemoryDbService {\n\n  constructor() {}\n\n  onePerson = () => {\n    return {\n      id: faker.datatype.uuid(),\n      phone: faker.phone.phoneNumber(),\n      phoneNumberFormat: faker.phone.phoneNumberFormat(),\n      firstName: faker.name.firstName(),\n      lastName: faker.name.lastName(),\n      email: faker.internet.email(),\n      zipCode: faker.address.zipCode(),\n      city: faker.address.city(),\n      streetName: faker.address.streetName(),\n      streetAddress: faker.address.streetAddress(),\n    }\n  }\n  persons () {\n    const res = [];\n    range(faker.datatype.number(1000)).pipe(\n      map(this.onePerson)\n    ).subscribe(\n      person => res.push(person),\n      (err) => console.log(err),\n      () => console.log('mockData complete!')\n    )\n    return res;\n  }\n  createDb(reqInfo?: RequestInfo): {} | Observable<{}> | Promise<{}> {\n    let heros = [\n      {id : 1, name : \"아이언맨\"},\n      {id : 2, name : \"토르\"},\n      {id : 3, name : \"헐크\"},\n      {id : 4, name : \"블랙 위도우\"},\n    ]\n\n    \n    return { \n      heros, \n      persons: this.persons() \n    };\n    // return from(heros)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  endPoint: 'http://localhost:8080'\n\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  message: string;    // 공유할 데이터입니다.\n  constructor() { }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\nimport { ApiService } from './api.service';\nimport {AppConfig, APP_CONFIG} from './AppConfig'\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'test-inject';\n  constructor(\n    @Inject(APP_CONFIG) public appConfig: AppConfig,\n    private apiService: ApiService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {\n    console.log('home component:')\n    console.log(appConfig);\n  }\n  ngOnInit(): void {\n   \n    // console.log(environment.production)\n   \n    // this.apiService.get('heros').subscribe(\n    //   (res) => console.log(res),\n    //   (err) => console.log(err),\n    //   () => console.log('call heros api complete')\n    // )\n   \n    // this.apiService.get('persons').subscribe(\n    //   (res) => console.log(res),\n    //   (err) => console.log(err),\n    //   () => console.log('call persons api complete')      \n    // )\n    \n    // this.route.params.subscribe(\n    // )\n  }\n  \n}\n","\n\n<router-outlet></router-outlet>\n<a [routerLink]=\"['/child']\" >child로</a>\n<a [routerLink]=\"['/lazy']\" >child로</a>\n","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-data2',\n  templateUrl: './data2.component.html',\n  styleUrls: ['./data2.component.css']\n})\nexport class Data2Component implements OnInit {\n\n  constructor(\n    private dataService: DataService\n  ) { }\n\n  ngOnInit(): void {}\n  \n  get message(): string {\n    return this.dataService.message\n  }\n\n  set message(newMessage: string) {\n    this.dataService.message = newMessage\n  }\n  checkInput($event: any): any {\n    console.log($event)\n  }  \n}\n","<div style=\" adding: 10px; background-color: blanchedalmond;\">\n    <h2>Data - 2</h2>\n    <p>{{ message }}</p>\n    <input type=\"text\" (input)=\"message = checkInput($event)\" placeholder=\"message\">\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { Data1Component } from './data1/data1.component';\nimport { Data2Component } from './data2/data2.component';\nimport { HttpClientModule, HttpXhrBackend } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { InMemoryDbService, HttpClientInMemoryWebApiModule, InMemoryBackendConfigArgs } from 'angular-in-memory-web-api';\nimport { InMemHeroService } from './in-mem-hero.service';\nimport { ChildModule } from './child/child.module';\n\nconst inMemoryOptions: InMemoryBackendConfigArgs= {\n  // apiBase: '/api',\n  host: 'http://localhost:8082',\n  delay : 1000\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    Data1Component,\n    Data2Component\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    environment.production ? [] : HttpClientInMemoryWebApiModule.forRoot(InMemHeroService, inMemoryOptions),\n    ChildModule,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { InjectionToken } from '@angular/core';\n\nexport class AppConfig {\n    url: string;\n    port: string;\n    constructor(url: string, port: string, others?: string) {\n        console.log('AppConfig 생성 port:' + port)\n        this.url = url;\n        this.port = port\n    }\n\n}\n\nexport const MY_APP_CONFIG: AppConfig = new AppConfig('hello','hello') \n// export const YOUR_APP_CONFIG: AppConfig = new AppConfig('YOUR_APP_COINFG','5050') \n\n\n// export const APP_CONFIG = new InjectionToken<AppConfig>('')\n// 이런식으로 InjectionToken 인스턴스 생성하면서 providedIn: root 해주고 factory값에 인스턴스 생성 메소드를 넣어주면 APP_CONFIG라는 key로 전역에서 의존성 주입이 가능하다\nexport const APP_CONFIG = new InjectionToken<AppConfig>('', { providedIn: \"root\", factory: () =>  new AppConfig('니앱이다임마','1234') })\n\nexport const AppConfigProvider = {\n    provide: \"hello\",\n    useValue: MY_APP_CONFIG\n}","import { Component, OnDestroy, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-child',\n  templateUrl: './child.component.html',\n  styleUrls: ['./child.component.css']\n})\nexport class ChildComponent implements OnInit ,OnDestroy{\n\n  constructor() { }\n  ngOnDestroy(): void {\n    console.log('ChildComponent Destroied')\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2>차일드 모듈 나왔긔긔긔</h2>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ChildRoutingModule } from './child-routing.module';\nimport { ChildComponent } from './child/child.component';\n\n\n@NgModule({\n  declarations: [ChildComponent],\n  imports: [\n    CommonModule,\n    ChildRoutingModule\n  ]\n})\nexport class ChildModule{}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '',\n    children:[\n      { path: 'child', loadChildren: () => import('./child/child.module').then(m => m.ChildModule)},\n      { path: 'lazy', loadChildren: () => import('./lazy-loading/lazy-loading.module').then(m => m.LazyLoadingModule )}\n    ]\n  },\n  { path: 'customers', loadChildren: () => import('./lazy-loading/customers/customers.module').then(m => m.CustomersModule) }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators'\nimport { environment } from 'src/environments/environment';\nimport { config } from './config/config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  get(url: string): Observable<any> {\n    return this.http.get(`${config.endPoint}/api/${url}`).pipe(\n      map(this.handleResponse)\n    )\n  }\n\n  handleResponse(res: HttpResponse<any>) {\n    if(environment.production) {\n      return res ? res.body : null;\n    } else {\n      return res;\n    }\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ChildComponent } from './child/child.component';\n\nconst routes: Routes = [\n  {path: \"\", component: ChildComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ChildRoutingModule { }\n"]}