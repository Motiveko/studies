{"version":3,"sources":["./src/app/config/config.ts","./src/app/data1/data1.component.ts","./src/app/data1/data1.component.html","./src/app/in-mem-hero.service.ts","./src/environments/environment.ts","./src/app/data.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/data2/data2.component.ts","./src/app/data2/data2.component.html","./src/app/app.module.ts","./src/app/AppConfig.ts","./src/app/child/child/child.component.ts","./src/app/child/child/child.component.html","./src/app/child/child.module.ts","./src/app/app-routing.module.ts","./src/app/api.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/app/child/child-routing.module.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { environment } from \"src/environments/environment\";\n\nexport const config = {\n    endPoint : environment.endPoint\n}","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-data1',\n  templateUrl: './data1.component.html',\n  styleUrls: ['./data1.component.css']\n})\nexport class Data1Component implements OnInit {\n\n  constructor(\n    private dataService: DataService\n  ) { }\n\n  ngOnInit(): void {}\n\n  get message(): string {\n    return this.dataService.message\n  }\n\n  set message(newMessage: string) {\n    this.dataService.message = newMessage\n  }\n  \n}\n","<div style=\"background-color: aliceblue; padding: 10px;\">\n    <h2>Data - 1</h2>\n    <p>{{ message }}</p>\n    <input type=\"text\" (input)=\"message = $event.target.value\" placeholder=\"message\">\n</div>","import { Injectable } from '@angular/core';\nimport { InMemoryDbService, RequestInfo } from 'angular-in-memory-web-api';\nimport {  Observable, range } from 'rxjs';\nimport * as faker from 'faker/locale/ko'\nimport { map, reduce } from 'rxjs/operators';\n\n/**\n * Http Client의 Api호출을 Mocking하기위한 InMemoryDbService 구현체\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class InMemHeroService implements InMemoryDbService {\n\n  constructor() {}\n\n  onePerson = () => {\n    return {\n      id: faker.datatype.uuid(),\n      phone: faker.phone.phoneNumber(),\n      phoneNumberFormat: faker.phone.phoneNumberFormat(),\n      firstName: faker.name.firstName(),\n      lastName: faker.name.lastName(),\n      email: faker.internet.email(),\n      zipCode: faker.address.zipCode(),\n      city: faker.address.city(),\n      streetName: faker.address.streetName(),\n      streetAddress: faker.address.streetAddress(),\n    }\n  }\n  persons () {\n    const res = [];\n    range(faker.datatype.number(1000)).pipe(\n      map(this.onePerson)\n    ).subscribe(\n      person => res.push(person),\n      (err) => console.log(err),\n      () => console.log('mockData complete!')\n    )\n    return res;\n  }\n  createDb(reqInfo?: RequestInfo): {} | Observable<{}> | Promise<{}> {\n    let heros = [\n      {id : 1, name : \"아이언맨\"},\n      {id : 2, name : \"토르\"},\n      {id : 3, name : \"헐크\"},\n      {id : 4, name : \"블랙 위도우\"},\n    ]\n\n    \n    return { \n      heros, \n      persons: this.persons() \n    };\n    // return from(heros)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  endPoint: 'http://localhost:8080'\n\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  message: string;    // 공유할 데이터입니다.\n  constructor() { }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\nimport { ApiService } from './api.service';\nimport {AppConfig, APP_CONFIG} from './AppConfig'\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'test-inject';\n  constructor(\n    @Inject(APP_CONFIG) public appConfig: AppConfig,\n    private apiService: ApiService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {\n    console.log('home component:')\n    console.log(appConfig);\n  }\n  ngOnInit(): void {\n   \n    // console.log(environment.production)\n   \n    // this.apiService.get('heros').subscribe(\n    //   (res) => console.log(res),\n    //   (err) => console.log(err),\n    //   () => console.log('call heros api complete')\n    // )\n   \n    // this.apiService.get('persons').subscribe(\n    //   (res) => console.log(res),\n    //   (err) => console.log(err),\n    //   () => console.log('call persons api complete')      \n    // )\n    \n    // this.route.params.subscribe(\n    // )\n  }\n  \n}\n","\n\n<router-outlet></router-outlet>\n<a [routerLink]=\"['/child']\" >child로</a>\n<a [routerLink]=\"['/lazy']\" >child로</a>\n","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-data2',\n  templateUrl: './data2.component.html',\n  styleUrls: ['./data2.component.css']\n})\nexport class Data2Component implements OnInit {\n\n  constructor(\n    private dataService: DataService\n  ) { }\n\n  ngOnInit(): void {}\n  \n  get message(): string {\n    return this.dataService.message\n  }\n\n  set message(newMessage: string) {\n    this.dataService.message = newMessage\n  }\n  checkInput($event: any): any {\n    console.log($event)\n  }  \n}\n","<div style=\" adding: 10px; background-color: blanchedalmond;\">\n    <h2>Data - 2</h2>\n    <p>{{ message }}</p>\n    <input type=\"text\" (input)=\"message = checkInput($event)\" placeholder=\"message\">\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { Data1Component } from './data1/data1.component';\nimport { Data2Component } from './data2/data2.component';\nimport { HttpClientModule, HttpXhrBackend } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { InMemoryDbService, HttpClientInMemoryWebApiModule, InMemoryBackendConfigArgs } from 'angular-in-memory-web-api';\nimport { InMemHeroService } from './in-mem-hero.service';\nimport { ChildModule } from './child/child.module';\n\nconst inMemoryOptions: InMemoryBackendConfigArgs= {\n  // apiBase: '/api',\n  host: 'http://localhost:8082',\n  delay : 1000\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    Data1Component,\n    Data2Component\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    environment.production ? [] : HttpClientInMemoryWebApiModule.forRoot(InMemHeroService, inMemoryOptions),\n    ChildModule,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { InjectionToken } from '@angular/core';\n\nexport class AppConfig {\n    url: string;\n    port: string;\n    constructor(url: string, port: string, others?: string) {\n        console.log('AppConfig 생성 port:' + port)\n        this.url = url;\n        this.port = port\n    }\n\n}\n\nexport const MY_APP_CONFIG: AppConfig = new AppConfig('hello','hello') \n// export const YOUR_APP_CONFIG: AppConfig = new AppConfig('YOUR_APP_COINFG','5050') \n\n\n// export const APP_CONFIG = new InjectionToken<AppConfig>('')\n// 이런식으로 InjectionToken 인스턴스 생성하면서 providedIn: root 해주고 factory값에 인스턴스 생성 메소드를 넣어주면 APP_CONFIG라는 key로 전역에서 의존성 주입이 가능하다\nexport const APP_CONFIG = new InjectionToken<AppConfig>('', { providedIn: \"root\", factory: () =>  new AppConfig('니앱이다임마','1234') })\n\nexport const AppConfigProvider = {\n    provide: \"hello\",\n    useValue: MY_APP_CONFIG\n}","import { Component, OnDestroy, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-child',\n  templateUrl: './child.component.html',\n  styleUrls: ['./child.component.css']\n})\nexport class ChildComponent implements OnInit ,OnDestroy{\n\n  constructor() { }\n  ngOnDestroy(): void {\n    console.log('ChildComponent Destroied')\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2>차일드 모듈 나왔긔긔긔</h2>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ChildRoutingModule } from './child-routing.module';\nimport { ChildComponent } from './child/child.component';\n\n\n@NgModule({\n  declarations: [ChildComponent],\n  imports: [\n    CommonModule,\n    ChildRoutingModule\n  ]\n})\nexport class ChildModule{}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '',\n    children:[\n      { path: 'child', loadChildren: () => import('./child/child.module').then(m => m.ChildModule)},\n      { path: 'lazy', loadChildren: () => import('./lazy-loading/lazy-loading.module').then(m => m.LazyLoadingModule )}\n    ]\n  },\n  { path: 'customers', loadChildren: () => import('./lazy-loading/customers/customers.module').then(m => m.CustomersModule) }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators'\nimport { environment } from 'src/environments/environment';\nimport { config } from './config/config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  get(url: string): Observable<any> {\n    return this.http.get(`${config.endPoint}/api/${url}`).pipe(\n      map(this.handleResponse)\n    )\n  }\n\n  handleResponse(res: HttpResponse<any>) {\n    if(environment.production) {\n      return res ? res.body : null;\n    } else {\n      return res;\n    }\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ChildComponent } from './child/child.component';\n\nconst routes: Routes = [\n  {path: \"\", component: ChildComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ChildRoutingModule { }\n"],"sourceRoot":"webpack:///"}